{
	"info": {
		"_postman_id": "65172f07-5eb2-4ecc-9091-2a617c0eb8d1",
		"name": "FakeRESTApi.Web V1",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18880985",
		"_collection_link": "https://speeding-moon-555514.postman.co/workspace/Team-Workspace~15a576d0-7ce8-4a4f-8c62-ed6f2309f251/collection/27344752-65172f07-5eb2-4ecc-9091-2a617c0eb8d1?action=share&creator=18880985&source=collection_link"
	},
	"item": [
		{
			"name": "api",
			"item": [
				{
					"name": "v1",
					"item": [
						{
							"name": "Users",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Users/:id позитив",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 5000ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is present\", function () {\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is application/json\", function () {\r",
															"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/json; charset=utf-8; v=1.0');\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/Users/{{id}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"Users",
														"{{id}}"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/v1/Users/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"Users",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Users/:id негатив",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 5000ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is present\", function () {\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is application/json\", function () {\r",
															"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/json; charset=utf-8; v=1.0');\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/Users/{{отриц}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"Users",
														"{{отриц}}"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/v1/Users/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"Users",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Users/:id недопустимое",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 5000ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is present\", function () {\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is application/json\", function () {\r",
															"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/json; charset=utf-8; v=1.0');\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/Users/{{недоп_знач}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"Users",
														"{{недоп_знач}}"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/v1/Users/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"Users",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Users/:id несуществующее",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 404\", function () {\r",
															"    pm.response.to.have.status(404);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 5000ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is present\", function () {\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is application/json\", function () {\r",
															"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/json; charset=utf-8; v=1.0');\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/Users/9000",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"Users",
														"9000"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/v1/Users/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"Users",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Users/:id позитивный",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"if (pm.response.code == 200) {\r",
															"const res = pm.response.json(); \r",
															"const id = res.id; \r",
															"if (id)\r",
															"pm.environment.set('idVar', id); \r",
															"}\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 5000ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is present\", function () {\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is application/json\", function () {\r",
															"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/json; charset=utf-8; v=1.0');\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; v=1.0"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"2\",\n  \"userName\": \"ttt\",\n  \"password\": \"TTT\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/api/v1/Users/{{id}}",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"Users",
														"{{id}}"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json; v=1.0"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<integer>\",\n  \"userName\": \"<string>\",\n  \"password\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/Users/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"Users",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Users/:id проверка PUT",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 5000ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is present\", function () {\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is application/json\", function () {\r",
															"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/json; charset=utf-8; v=1.0');\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseURL}}/api/v1/Users/2",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"Users",
														"2"
													]
												}
											},
											"response": []
										},
										{
											"name": "Users/:id негатив",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"if (pm.response.code == 200) {\r",
															"const res = pm.response.json(); \r",
															"const id = res.id; \r",
															"if (id)\r",
															"pm.environment.set('idVar', id); \r",
															"}\r",
															"\r",
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 5000ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is present\", function () {\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is application/json\", function () {\r",
															"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/problem+json; charset=utf-8');\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; v=1.0"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"925\",\n  \"userName\": \"ttt\",\n  \"password\": \"TTT\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/api/v1/Users/{{отриц}}",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"Users",
														"{{отриц}}"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json; v=1.0"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<integer>\",\n  \"userName\": \"<string>\",\n  \"password\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/Users/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"Users",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Users/:id недопустим",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"if (pm.response.code == 200) {\r",
															"const res = pm.response.json(); \r",
															"const id = res.id; \r",
															"if (id)\r",
															"pm.environment.set('idVar', id); \r",
															"}\r",
															"\r",
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 5000ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is present\", function () {\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is application/json\", function () {\r",
															"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/problem+json; charset=utf-8');\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; v=1.0"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"925\",\n  \"userName\": \"ttt\",\n  \"password\": \"TTT\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/api/v1/Users/{{недоп_знач}}",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"Users",
														"{{недоп_знач}}"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json; v=1.0"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<integer>\",\n  \"userName\": \"<string>\",\n  \"password\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/Users/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"Users",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Users/:id тело буквы",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"if (pm.response.code == 200) {\r",
															"const res = pm.response.json(); \r",
															"const id = res.id; \r",
															"if (id)\r",
															"pm.environment.set('idVar', id); \r",
															"}\r",
															"\r",
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 5000ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is present\", function () {\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is application/json\", function () {\r",
															"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/problem+json; charset=utf-8');\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; v=1.0"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": {{букаы}},\n  \"userName\": \"\",\n  \"password\": \"TTT\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/api/v1/Users/{{id}}",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"Users",
														"{{id}}"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json; v=1.0"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<integer>\",\n  \"userName\": \"<string>\",\n  \"password\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/Users/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"Users",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Users/:id пустое тело",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"if (pm.response.code == 200) {\r",
															"const res = pm.response.json(); \r",
															"const id = res.id; \r",
															"if (id)\r",
															"pm.environment.set('idVar', id); \r",
															"}\r",
															"\r",
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 5000ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is present\", function () {\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is application/json\", function () {\r",
															"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/problem+json; charset=utf-8');\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; v=1.0"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": ,\n  \"userName\": ,\n  \"password\": \n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/api/v1/Users/{{id}}",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"Users",
														"{{id}}"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json; v=1.0"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<integer>\",\n  \"userName\": \"<string>\",\n  \"password\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/Users/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"Users",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Users/:id позитивный",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseURL}}}/api/v1/Users/{{id}}",
													"host": [
														"{{baseURL}}}"
													],
													"path": [
														"api",
														"v1",
														"Users",
														"{{id}}"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/v1/Users/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"Users",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Users/:id проверка delete",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 204\", function () {\r",
															"    pm.response.to.have.status(404);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseURL}}/api/v1/Users/{{id}}",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"Users",
														"{{id}}"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/v1/Users/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"Users",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Users/:id негатив отрицат",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"\r",
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseURL}}/api/v1/Users/{{отриц}}",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"Users",
														"{{отриц}}"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/v1/Users/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"Users",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Users позитив",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"if (pm.response.code == 201) {\r",
													"    var res = pm.response.json(); \r",
													"    var id = res.id; \r",
													"    if (id) {\r",
													"        pm.environment.set('idVar', id);\r",
													"    }\r",
													"         \r",
													"}\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 5000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type is present\", function () {\r",
													"    pm.response.to.have.header(\"Content-Type\");\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type is application/json\", function () {\r",
													"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/json; charset=utf-8; v=1.0');\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; v=1.0"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"3\",\n  \"userName\": \"te\",\n  \"password\": \"rrr\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/Users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"Users"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; v=1.0"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<integer>\",\n  \"userName\": \"<string>\",\n  \"password\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/Users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"Users"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "проверка POST",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/Users/3",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"Users",
												"3"
											]
										}
									},
									"response": []
								},
								{
									"name": "Users тело отрицат",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"if (pm.response.code == 201) {\r",
													"    var res = pm.response.json(); \r",
													"    var id = res.id; \r",
													"    if (id) {\r",
													"        pm.environment.set('idVar', id);\r",
													"    }\r",
													"         \r",
													"}\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 5000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type is present\", function () {\r",
													"    pm.response.to.have.header(\"Content-Type\");\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type is application/json\", function () {\r",
													"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/problem+json; charset=utf-8');\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; v=1.0"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": {{отриц}},\n  \"userName\": \"te\",\n  \"password\": \"rrr\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/Users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"Users"
											]
										}
									},
									"response": []
								},
								{
									"name": "Users тело спецсимв",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"if (pm.response.code == 201) {\r",
													"    var res = pm.response.json(); \r",
													"    var id = res.id; \r",
													"    if (id) {\r",
													"        pm.environment.set('idVar', id);\r",
													"    }\r",
													"         \r",
													"}\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 5000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type is present\", function () {\r",
													"    pm.response.to.have.header(\"Content-Type\");\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type is application/json\", function () {\r",
													"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/problem+json; charset=utf-8');\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; v=1.0"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": {{спецсимв}},\n  \"userName\": \"te\",\n  \"password\": \"rrr\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/Users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"Users"
											]
										}
									},
									"response": []
								},
								{
									"name": "Users тело пустое знач",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"if (pm.response.code == 201) {\r",
													"    var res = pm.response.json(); \r",
													"    var id = res.id; \r",
													"    if (id) {\r",
													"        pm.environment.set('idVar', id);\r",
													"    }\r",
													"         \r",
													"}\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 5000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type is present\", function () {\r",
													"    pm.response.to.have.header(\"Content-Type\");\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type is application/json\", function () {\r",
													"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/problem+json; charset=utf-8');\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; v=1.0"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": 2,\n  \"userName\": ,\n  \"password\": \n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/Users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"Users"
											]
										}
									},
									"response": []
								},
								{
									"name": "Users позитивный",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 5000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type is present\", function () {\r",
													"    pm.response.to.have.header(\"Content-Type\");\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type is application/json\", function () {\r",
													"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/json; charset=utf-8; v=1.0');\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/api/v1/Users",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"Users"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "CoverPhotos",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "CoverPhotos/:id позитив",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 5000ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is present\", function () {\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is application/json\", function () {\r",
															"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/json; charset=utf-8; v=1.0');\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain; v=1.0"
													}
												],
												"url": {
													"raw": "{{baseURL}}/api/v1/CoverPhotos/{{id}}",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"CoverPhotos",
														"{{id}}"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "text/plain; v=1.0"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/CoverPhotos/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"CoverPhotos",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain; v=1.0"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<integer>\",\n  \"idBook\": \"<integer>\",\n  \"url\": \"<uri>\"\n}"
												}
											]
										},
										{
											"name": "CoverPhotos/:id отриц",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 5000ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is present\", function () {\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is application/json\", function () {\r",
															"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/problem+json; charset=utf-8');\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain; v=1.0"
													}
												],
												"url": {
													"raw": "{{baseURL}}/api/v1/CoverPhotos/{{отриц}}",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"CoverPhotos",
														"{{отриц}}"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "text/plain; v=1.0"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/CoverPhotos/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"CoverPhotos",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain; v=1.0"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<integer>\",\n  \"idBook\": \"<integer>\",\n  \"url\": \"<uri>\"\n}"
												}
											]
										},
										{
											"name": "CoverPhotos/:id недопустимое",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 5000ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is present\", function () {\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is application/json\", function () {\r",
															"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/problem+json; charset=utf-8');\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain; v=1.0"
													}
												],
												"url": {
													"raw": "{{baseURL}}/api/v1/CoverPhotos/{{недоп_знач}}",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"CoverPhotos",
														"{{недоп_знач}}"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "text/plain; v=1.0"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/CoverPhotos/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"CoverPhotos",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain; v=1.0"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<integer>\",\n  \"idBook\": \"<integer>\",\n  \"url\": \"<uri>\"\n}"
												}
											]
										},
										{
											"name": "CoverPhotos/:id несуществующее",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 404\", function () {\r",
															"    pm.response.to.have.status(404);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 5000ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is present\", function () {\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is application/json\", function () {\r",
															"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/problem+json; charset=utf-8; v=1.0');\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain; v=1.0"
													}
												],
												"url": {
													"raw": "{{baseURL}}/api/v1/CoverPhotos/1004",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"CoverPhotos",
														"1004"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "text/plain; v=1.0"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/CoverPhotos/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"CoverPhotos",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain; v=1.0"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<integer>\",\n  \"idBook\": \"<integer>\",\n  \"url\": \"<uri>\"\n}"
												}
											]
										},
										{
											"name": "CoverPhotos/:id позитив",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 5000ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is present\", function () {\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is application/json\", function () {\r",
															"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/json; charset=utf-8; v=1.0');\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; v=1.0"
													},
													{
														"key": "Accept",
														"value": "text/plain; v=1.0"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": 825,\n  \"idBook\": 1,\n  \"url\": \"teststring\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/api/v1/CoverPhotos/{{id}}",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"CoverPhotos",
														"{{id}}"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json; v=1.0"
															},
															{
																"key": "Accept",
																"value": "text/plain; v=1.0"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<integer>\",\n  \"idBook\": \"<integer>\",\n  \"url\": \"<uri>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/CoverPhotos/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"CoverPhotos",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain; v=1.0"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<integer>\",\n  \"idBook\": \"<integer>\",\n  \"url\": \"<uri>\"\n}"
												}
											]
										},
										{
											"name": "CoverPhotos/:id проверка PUT",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 5000ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is present\", function () {\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is application/json\", function () {\r",
															"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/json; charset=utf-8; v=1.0');\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; v=1.0"
													},
													{
														"key": "Accept",
														"value": "text/plain; v=1.0"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/api/v1/CoverPhotos/825",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"CoverPhotos",
														"825"
													]
												}
											},
											"response": []
										},
										{
											"name": "CoverPhotos/:id отрицательное",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 5000ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is present\", function () {\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is application/json\", function () {\r",
															"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/problem+json; charset=utf-8');\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; v=1.0"
													},
													{
														"key": "Accept",
														"value": "text/plain; v=1.0"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": 825,\n  \"idBook\": 1,\n  \"url\": \"teststring\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/api/v1/CoverPhotos/{{отриц}}",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"CoverPhotos",
														"{{отриц}}"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json; v=1.0"
															},
															{
																"key": "Accept",
																"value": "text/plain; v=1.0"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<integer>\",\n  \"idBook\": \"<integer>\",\n  \"url\": \"<uri>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/CoverPhotos/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"CoverPhotos",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain; v=1.0"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<integer>\",\n  \"idBook\": \"<integer>\",\n  \"url\": \"<uri>\"\n}"
												}
											]
										},
										{
											"name": "CoverPhotos/:id недопустимое",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 5000ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is present\", function () {\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is application/json\", function () {\r",
															"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/problem+json; charset=utf-8');\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; v=1.0"
													},
													{
														"key": "Accept",
														"value": "text/plain; v=1.0"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": 825,\n  \"idBook\": 1,\n  \"url\": \"teststring\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/api/v1/CoverPhotos/{{недоп_знач}}",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"CoverPhotos",
														"{{недоп_знач}}"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json; v=1.0"
															},
															{
																"key": "Accept",
																"value": "text/plain; v=1.0"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<integer>\",\n  \"idBook\": \"<integer>\",\n  \"url\": \"<uri>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/CoverPhotos/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"CoverPhotos",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain; v=1.0"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<integer>\",\n  \"idBook\": \"<integer>\",\n  \"url\": \"<uri>\"\n}"
												}
											]
										},
										{
											"name": "CoverPhotos/:id тело буквы",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 5000ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is present\", function () {\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is application/json\", function () {\r",
															"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/problem+json; charset=utf-8');\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; v=1.0"
													},
													{
														"key": "Accept",
														"value": "text/plain; v=1.0"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": {{букаы}},\n  \"idBook\": 1,\n  \"url\": \"teststring\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/api/v1/CoverPhotos/{{id}}",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"CoverPhotos",
														"{{id}}"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json; v=1.0"
															},
															{
																"key": "Accept",
																"value": "text/plain; v=1.0"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<integer>\",\n  \"idBook\": \"<integer>\",\n  \"url\": \"<uri>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/CoverPhotos/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"CoverPhotos",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain; v=1.0"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<integer>\",\n  \"idBook\": \"<integer>\",\n  \"url\": \"<uri>\"\n}"
												}
											]
										},
										{
											"name": "CoverPhotos/:id тело idBook отриц",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 5000ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is present\", function () {\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is application/json\", function () {\r",
															"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/problem+json; charset=utf-8');\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; v=1.0"
													},
													{
														"key": "Accept",
														"value": "text/plain; v=1.0"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": 825,\n  \"idBook\": {{отриц}},\n  \"url\": \"teststring\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/api/v1/CoverPhotos/{{id}}",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"CoverPhotos",
														"{{id}}"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json; v=1.0"
															},
															{
																"key": "Accept",
																"value": "text/plain; v=1.0"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<integer>\",\n  \"idBook\": \"<integer>\",\n  \"url\": \"<uri>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/CoverPhotos/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"CoverPhotos",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain; v=1.0"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<integer>\",\n  \"idBook\": \"<integer>\",\n  \"url\": \"<uri>\"\n}"
												}
											]
										},
										{
											"name": "CoverPhotos/:id тело обязательность заполн",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 5000ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is present\", function () {\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is application/json\", function () {\r",
															"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/problem+json; charset=utf-8');\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; v=1.0"
													},
													{
														"key": "Accept",
														"value": "text/plain; v=1.0"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": null,\n  \"idBook\": null,\n  \"url\": \"teststring\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/api/v1/CoverPhotos/{{id}}",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"CoverPhotos",
														"{{id}}"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json; v=1.0"
															},
															{
																"key": "Accept",
																"value": "text/plain; v=1.0"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<integer>\",\n  \"idBook\": \"<integer>\",\n  \"url\": \"<uri>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/CoverPhotos/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"CoverPhotos",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain; v=1.0"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<integer>\",\n  \"idBook\": \"<integer>\",\n  \"url\": \"<uri>\"\n}"
												}
											]
										},
										{
											"name": "CoverPhotos/:id позитив",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 5000ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/api/v1/CoverPhotos/{{id}}",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"CoverPhotos",
														"{{id}}"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/v1/CoverPhotos/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"CoverPhotos",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "CoverPhotos/:id проверка DEL",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 204\", function () {\r",
															"    pm.response.to.have.status(404);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseURL}}/api/v1/CoverPhotos/{{id}}",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"CoverPhotos",
														"{{id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "CoverPhotos/:id отрицательное",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/api/v1/CoverPhotos/{{отриц}}",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"CoverPhotos",
														"{{отриц}}"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/v1/CoverPhotos/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"CoverPhotos",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "books",
									"item": [
										{
											"name": "covers",
											"item": [
												{
													"name": "{idBook}",
													"item": [
														{
															"name": "CoverPhotos:idBook позитив",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Status code is 200\", function () {\r",
																			"    pm.response.to.have.status(200);\r",
																			"});\r",
																			"\r",
																			"pm.test(\"Response time is less than 5000ms\", function () {\r",
																			"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
																			"});\r",
																			"\r",
																			"pm.test(\"Content-Type is present\", function () {\r",
																			"    pm.response.to.have.header(\"Content-Type\");\r",
																			"});\r",
																			"\r",
																			"pm.test(\"Content-Type is application/json\", function () {\r",
																			"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/json; charset=utf-8; v=1.0');\r",
																			"});\r",
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "text/plain; v=1.0"
																	}
																],
																"url": {
																	"raw": "{{baseURL}}/api/v1/CoverPhotos/books/covers/{{id}}",
																	"host": [
																		"{{baseURL}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"CoverPhotos",
																		"books",
																		"covers",
																		"{{id}}"
																	]
																}
															},
															"response": [
																{
																	"name": "Success",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "text/plain; v=1.0"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v1/CoverPhotos/books/covers/:idBook",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v1",
																				"CoverPhotos",
																				"books",
																				"covers",
																				":idBook"
																			],
																			"variable": [
																				{
																					"key": "idBook"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain; v=1.0"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"idBook\": \"<integer>\",\n    \"url\": \"<uri>\"\n  },\n  {\n    \"id\": \"<integer>\",\n    \"idBook\": \"<integer>\",\n    \"url\": \"<uri>\"\n  }\n]"
																}
															]
														},
														{
															"name": "CoverPhotos:idBook недопустимое значение",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Status code is 400\", function () {\r",
																			"    pm.response.to.have.status(400);\r",
																			"});\r",
																			"\r",
																			"pm.test(\"Response time is less than 5000ms\", function () {\r",
																			"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
																			"});\r",
																			"\r",
																			"pm.test(\"Content-Type is present\", function () {\r",
																			"    pm.response.to.have.header(\"Content-Type\");\r",
																			"});\r",
																			"\r",
																			"pm.test(\"Content-Type is application/json\", function () {\r",
																			"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/problem+json; charset=utf-8');\r",
																			"});\r",
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "text/plain; v=1.0"
																	}
																],
																"url": {
																	"raw": "{{baseURL}}/api/v1/CoverPhotos/books/covers/{{недоп_знач}}",
																	"host": [
																		"{{baseURL}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"CoverPhotos",
																		"books",
																		"covers",
																		"{{недоп_знач}}"
																	]
																}
															},
															"response": [
																{
																	"name": "Success",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "text/plain; v=1.0"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v1/CoverPhotos/books/covers/:idBook",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v1",
																				"CoverPhotos",
																				"books",
																				"covers",
																				":idBook"
																			],
																			"variable": [
																				{
																					"key": "idBook"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain; v=1.0"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"idBook\": \"<integer>\",\n    \"url\": \"<uri>\"\n  },\n  {\n    \"id\": \"<integer>\",\n    \"idBook\": \"<integer>\",\n    \"url\": \"<uri>\"\n  }\n]"
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "CoverPhotos весь список",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 5000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type is present\", function () {\r",
													"    pm.response.to.have.header(\"Content-Type\");\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type is application/json\", function () {\r",
													"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/json; charset=utf-8; v=1.0');\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain; v=1.0"
											}
										],
										"url": {
											"raw": "{{baseURL}}/api/v1/CoverPhotos",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"CoverPhotos"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain; v=1.0"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/CoverPhotos",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"CoverPhotos"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain; v=1.0"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"idBook\": \"<integer>\",\n    \"url\": \"<uri>\"\n  },\n  {\n    \"id\": \"<integer>\",\n    \"idBook\": \"<integer>\",\n    \"url\": \"<uri>\"\n  }\n]"
										}
									]
								},
								{
									"name": "CoverPhotos позитивные",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 5000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type is present\", function () {\r",
													"    pm.response.to.have.header(\"Content-Type\");\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type is application/json\", function () {\r",
													"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/json; charset=utf-8; v=1.0');\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; v=1.0"
											},
											{
												"key": "Accept",
												"value": "text/plain; v=1.0"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": 1004,\n  \"idBook\": 10,\n  \"url\": \"string\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/api/v1/CoverPhotos",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"CoverPhotos"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; v=1.0"
													},
													{
														"key": "Accept",
														"value": "text/plain; v=1.0"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<integer>\",\n  \"idBook\": \"<integer>\",\n  \"url\": \"<uri>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/CoverPhotos",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"CoverPhotos"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain; v=1.0"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<integer>\",\n  \"idBook\": \"<integer>\",\n  \"url\": \"<uri>\"\n}"
										}
									]
								},
								{
									"name": "CoverPhotos проверка POST",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain; v=1.0"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/api/v1/CoverPhotos/1004",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"CoverPhotos",
												"1004"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain; v=1.0"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/CoverPhotos",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"CoverPhotos"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain; v=1.0"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"idBook\": \"<integer>\",\n    \"url\": \"<uri>\"\n  },\n  {\n    \"id\": \"<integer>\",\n    \"idBook\": \"<integer>\",\n    \"url\": \"<uri>\"\n  }\n]"
										}
									]
								},
								{
									"name": "CoverPhotos в теле запроса отриц знач",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 5000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type is present\", function () {\r",
													"    pm.response.to.have.header(\"Content-Type\");\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type is application/json\", function () {\r",
													"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/problem+json; charset=utf-8');\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; v=1.0"
											},
											{
												"key": "Accept",
												"value": "text/plain; v=1.0"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": {{отриц}},\n  \"idBook\": \"10\",\n  \"url\": \"string\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/api/v1/CoverPhotos/",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"CoverPhotos",
												""
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; v=1.0"
													},
													{
														"key": "Accept",
														"value": "text/plain; v=1.0"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<integer>\",\n  \"idBook\": \"<integer>\",\n  \"url\": \"<uri>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/CoverPhotos",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"CoverPhotos"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain; v=1.0"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<integer>\",\n  \"idBook\": \"<integer>\",\n  \"url\": \"<uri>\"\n}"
										}
									]
								},
								{
									"name": "CoverPhotos в теле запроса  в inBook спецсимв",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 5000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type is present\", function () {\r",
													"    pm.response.to.have.header(\"Content-Type\");\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type is application/json\", function () {\r",
													"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/problem+json; charset=utf-8');\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; v=1.0"
											},
											{
												"key": "Accept",
												"value": "text/plain; v=1.0"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"100\",\n  \"idBook\": \"{{спецсимв}}\",\n  \"url\": \"string\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/api/v1/CoverPhotos",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"CoverPhotos"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; v=1.0"
													},
													{
														"key": "Accept",
														"value": "text/plain; v=1.0"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<integer>\",\n  \"idBook\": \"<integer>\",\n  \"url\": \"<uri>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/CoverPhotos",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"CoverPhotos"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain; v=1.0"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<integer>\",\n  \"idBook\": \"<integer>\",\n  \"url\": \"<uri>\"\n}"
										}
									]
								},
								{
									"name": "CoverPhotos тело обязательность заполнения",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 5000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type is present\", function () {\r",
													"    pm.response.to.have.header(\"Content-Type\");\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type is application/json\", function () {\r",
													"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/problem+json; charset=utf-8');\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; v=1.0"
											},
											{
												"key": "Accept",
												"value": "text/plain; v=1.0"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": null,\n  \"idBook\": null,\n  \"url\": \"string\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/api/v1/CoverPhotos",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"CoverPhotos"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; v=1.0"
													},
													{
														"key": "Accept",
														"value": "text/plain; v=1.0"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<integer>\",\n  \"idBook\": \"<integer>\",\n  \"url\": \"<uri>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/CoverPhotos",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"CoverPhotos"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain; v=1.0"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<integer>\",\n  \"idBook\": \"<integer>\",\n  \"url\": \"<uri>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Books",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Books/:id позитив",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 5000ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is present\", function () {\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is application/json\", function () {\r",
															"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/json; charset=utf-8; v=1.0');\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain; v=1.0"
													}
												],
												"url": {
													"raw": "{{baseURL}}/api/v1/Books/{{id}}",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"Books",
														"{{id}}"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "text/plain; v=1.0"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/Books/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"Books",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain; v=1.0"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"description\": \"<string>\",\n  \"pageCount\": \"<integer>\",\n  \"excerpt\": \"<string>\",\n  \"publishDate\": \"<dateTime>\"\n}"
												}
											]
										},
										{
											"name": "Books/:id отриц",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 5000ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is present\", function () {\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is application/json\", function () {\r",
															"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/problem+json; charset=utf-8');\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain; v=1.0"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/api/v1/Books/{{отриц}}",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"Books",
														"{{отриц}}"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "text/plain; v=1.0"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/Books/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"Books",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain; v=1.0"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"description\": \"<string>\",\n  \"pageCount\": \"<integer>\",\n  \"excerpt\": \"<string>\",\n  \"publishDate\": \"<dateTime>\"\n}"
												}
											]
										},
										{
											"name": "Books/:id недопустимое",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 5000ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is present\", function () {\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is application/json\", function () {\r",
															"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/problem+json; charset=utf-8');\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain; v=1.0"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/api/v1/Books/{{недоп_знач}}",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"Books",
														"{{недоп_знач}}"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "text/plain; v=1.0"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/Books/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"Books",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain; v=1.0"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"description\": \"<string>\",\n  \"pageCount\": \"<integer>\",\n  \"excerpt\": \"<string>\",\n  \"publishDate\": \"<dateTime>\"\n}"
												}
											]
										},
										{
											"name": "Books/:id несуществующ",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 404\", function () {\r",
															"    pm.response.to.have.status(404);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 5000ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is present\", function () {\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is application/json\", function () {\r",
															"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/problem+json; charset=utf-8; v=1.0');\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain; v=1.0"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/api/v1/Books/1000",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"Books",
														"1000"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "text/plain; v=1.0"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/Books/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"Books",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain; v=1.0"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"description\": \"<string>\",\n  \"pageCount\": \"<integer>\",\n  \"excerpt\": \"<string>\",\n  \"publishDate\": \"<dateTime>\"\n}"
												}
											]
										},
										{
											"name": "Books/:id позитив",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 5000ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is present\", function () {\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is application/json\", function () {\r",
															"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/json; charset=utf-8; v=1.0');\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; v=1.0"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": 1003,\n  \"title\": \"string\",\n  \"description\": \"string\",\n  \"pageCount\": 200,\n  \"excerpt\": \"string\",\n  \"publishDate\": \"2023-05-19T14:26:02.955Z\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/api/v1/Books/{{id}}",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"Books",
														"{{id}}"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json; v=1.0"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"description\": \"<string>\",\n  \"pageCount\": \"<integer>\",\n  \"excerpt\": \"<string>\",\n  \"publishDate\": \"<dateTime>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/Books/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"Books",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Books/:id проверка PUT",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 5000ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is present\", function () {\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is application/json\", function () {\r",
															"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/json; charset=utf-8; v=1.0');\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain; v=1.0"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/api/v1/Books/1003",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"Books",
														"1003"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "text/plain; v=1.0"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/Books/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"Books",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain; v=1.0"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"description\": \"<string>\",\n  \"pageCount\": \"<integer>\",\n  \"excerpt\": \"<string>\",\n  \"publishDate\": \"<dateTime>\"\n}"
												}
											]
										},
										{
											"name": "Books/:id отриц",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 5000ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is present\", function () {\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is application/json\", function () {\r",
															"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/problem+json; charset=utf-8');\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; v=1.0"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": 100,\n  \"title\": \"string\",\n  \"description\": \"string\",\n  \"pageCount\": 200,\n  \"excerpt\": \"string\",\n  \"publishDate\": \"2023-05-19T14:26:02.955Z\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/api/v1/Books/{{отриц}}",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"Books",
														"{{отриц}}"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json; v=1.0"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"description\": \"<string>\",\n  \"pageCount\": \"<integer>\",\n  \"excerpt\": \"<string>\",\n  \"publishDate\": \"<dateTime>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/Books/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"Books",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Books/:id недопуст",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 5000ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is present\", function () {\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is application/json\", function () {\r",
															"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/problem+json; charset=utf-8');\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; v=1.0"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": 100,\n  \"title\": \"string\",\n  \"description\": \"string\",\n  \"pageCount\": 200,\n  \"excerpt\": \"string\",\n  \"publishDate\": \"2023-05-19T14:26:02.955Z\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/api/v1/Books/{{недоп_знач}}",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"Books",
														"{{недоп_знач}}"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json; v=1.0"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"description\": \"<string>\",\n  \"pageCount\": \"<integer>\",\n  \"excerpt\": \"<string>\",\n  \"publishDate\": \"<dateTime>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/Books/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"Books",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Books/:id тело буквы",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 5000ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is present\", function () {\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is application/json\", function () {\r",
															"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/problem+json; charset=utf-8');\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; v=1.0"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": {{букаы}},\n  \"title\": \"string\",\n  \"description\": \"string\",\n  \"pageCount\": 200,\n  \"excerpt\": \"string\",\n  \"publishDate\": \"2023-05-19T14:26:02.955Z\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/api/v1/Books/{{id}}",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"Books",
														"{{id}}"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json; v=1.0"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"description\": \"<string>\",\n  \"pageCount\": \"<integer>\",\n  \"excerpt\": \"<string>\",\n  \"publishDate\": \"<dateTime>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/Books/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"Books",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Books/:id тело не существующая дата \"publishDate\"",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 5000ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is present\", function () {\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is application/json\", function () {\r",
															"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/problem+json; charset=utf-8');\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; v=1.0"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": 100,\n  \"title\": \"string\",\n  \"description\": \"string\",\n  \"pageCount\": 200,\n  \"excerpt\": \"string\",\n  \"publishDate\": \"2023-25-20T09:47:29.148Z\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/api/v1/Books/{{id}}",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"Books",
														"{{id}}"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json; v=1.0"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"description\": \"<string>\",\n  \"pageCount\": \"<integer>\",\n  \"excerpt\": \"<string>\",\n  \"publishDate\": \"<dateTime>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/Books/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"Books",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Books/:id тело pageCount спецсимволы",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 5000ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is present\", function () {\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is application/json\", function () {\r",
															"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/problem+json; charset=utf-8');\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; v=1.0"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": 100,\n  \"title\": \"string\",\n  \"description\": \"string\",\n  \"pageCount\": {{спецсимв}},\n  \"excerpt\": \"string\",\n  \"publishDate\": \"2023-25-20T09:47:29.148Z\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/api/v1/Books/{{id}}",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"Books",
														"{{id}}"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json; v=1.0"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"description\": \"<string>\",\n  \"pageCount\": \"<integer>\",\n  \"excerpt\": \"<string>\",\n  \"publishDate\": \"<dateTime>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/Books/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"Books",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Books/:id тело обязательность заполн",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 5000ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is present\", function () {\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is application/json\", function () {\r",
															"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/problem+json; charset=utf-8');\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; v=1.0"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": null,\n  \"title\": \"string\",\n  \"description\": \"string\",\n  \"pageCount\": null,\n  \"excerpt\": \"string\",\n  \"publishDate\": null\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/api/v1/Books/{{id}}",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"Books",
														"{{id}}"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json; v=1.0"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"description\": \"<string>\",\n  \"pageCount\": \"<integer>\",\n  \"excerpt\": \"<string>\",\n  \"publishDate\": \"<dateTime>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/Books/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"Books",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Books/:id позитив",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 5000ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseURL}}/api/v1/Books/{{id}}",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"Books",
														"{{id}}"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/v1/Books/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"Books",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Books/:id проверка DEL",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 204\", function () {\r",
															"    pm.response.to.have.status(404);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain; v=1.0"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/api/v1/Books/{{id}}",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"Books",
														"{{id}}"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "text/plain; v=1.0"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/Books/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"Books",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain; v=1.0"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"description\": \"<string>\",\n  \"pageCount\": \"<integer>\",\n  \"excerpt\": \"<string>\",\n  \"publishDate\": \"<dateTime>\"\n}"
												}
											]
										},
										{
											"name": "Books/:id отриц",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/Books/{{отриц}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"Books",
														"{{отриц}}"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/v1/Books/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"Books",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Books весь список",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 5000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type is present\", function () {\r",
													"    pm.response.to.have.header(\"Content-Type\");\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type is application/json\", function () {\r",
													"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/json; charset=utf-8; v=1.0');\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain; v=1.0"
											}
										],
										"url": {
											"raw": "{{baseURL}}/api/v1/Books",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"Books"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain; v=1.0"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/Books",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"Books"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain; v=1.0"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"title\": \"<string>\",\n    \"description\": \"<string>\",\n    \"pageCount\": \"<integer>\",\n    \"excerpt\": \"<string>\",\n    \"publishDate\": \"<dateTime>\"\n  },\n  {\n    \"id\": \"<integer>\",\n    \"title\": \"<string>\",\n    \"description\": \"<string>\",\n    \"pageCount\": \"<integer>\",\n    \"excerpt\": \"<string>\",\n    \"publishDate\": \"<dateTime>\"\n  }\n]"
										}
									]
								},
								{
									"name": "Books позитив",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"pm.globals.set(\"id\", jsonData.id);\r",
													"\r",
													"\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 5000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type is present\", function () {\r",
													"    pm.response.to.have.header(\"Content-Type\");\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type is application/json\", function () {\r",
													"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/json; charset=utf-8; v=1.0');\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; v=1.0"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": 1003,\n  \"title\": \"string\",\n  \"description\": \"string\",\n  \"pageCount\": 100,\n  \"excerpt\": \"string\",\n  \"publishDate\": \"2023-05-19T12:28:15.232Z\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/api/v1/Books",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"Books"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; v=1.0"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"description\": \"<string>\",\n  \"pageCount\": \"<integer>\",\n  \"excerpt\": \"<string>\",\n  \"publishDate\": \"<dateTime>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/Books",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"Books"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Books проверка POST",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; v=1.0"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/api/v1/Books/1003",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"Books",
												"1003"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; v=1.0"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"description\": \"<string>\",\n  \"pageCount\": \"<integer>\",\n  \"excerpt\": \"<string>\",\n  \"publishDate\": \"<dateTime>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/Books",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"Books"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Books тело отриц",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 5000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type is present\", function () {\r",
													"    pm.response.to.have.header(\"Content-Type\");\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type is application/json\", function () {\r",
													"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/json; charset=utf-8; v=1.0');\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; v=1.0"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": {{отриц}},\n  \"title\": \"string\",\n  \"description\": \"string\",\n  \"pageCount\": 100,\n  \"excerpt\": \"string\",\n  \"publishDate\": \"2023-05-19T12:28:15.232Z\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/api/v1/Books",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"Books"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; v=1.0"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"description\": \"<string>\",\n  \"pageCount\": \"<integer>\",\n  \"excerpt\": \"<string>\",\n  \"publishDate\": \"<dateTime>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/Books",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"Books"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Books  тело обязательность заполнения",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 5000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type is present\", function () {\r",
													"    pm.response.to.have.header(\"Content-Type\");\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type is application/json\", function () {\r",
													"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/problem+json; charset=utf-8');\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; v=1.0"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": null,\n  \"title\": \"string\",\n  \"description\": \"string\",\n  \"pageCount\": null,\n  \"excerpt\": \"string\",\n  \"publishDate\": null\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/api/v1/Books",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"Books"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; v=1.0"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"description\": \"<string>\",\n  \"pageCount\": \"<integer>\",\n  \"excerpt\": \"<string>\",\n  \"publishDate\": \"<dateTime>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/Books",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"Books"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Books  тело не правильный формат \"publishDate\"",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 5000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type is present\", function () {\r",
													"    pm.response.to.have.header(\"Content-Type\");\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type is application/json\", function () {\r",
													"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/problem+json; charset=utf-8');\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; v=1.0"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": 100,\n  \"title\": \"string\",\n  \"description\": \"string\",\n  \"pageCount\": 200,\n  \"excerpt\": \"string\",\n  \"publishDate\": \"2023/05/19T12/28/15/232Z\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/api/v1/Books",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"Books"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; v=1.0"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"description\": \"<string>\",\n  \"pageCount\": \"<integer>\",\n  \"excerpt\": \"<string>\",\n  \"publishDate\": \"<dateTime>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/Books",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"Books"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Books  тело pageCount отриц",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 5000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type is present\", function () {\r",
													"    pm.response.to.have.header(\"Content-Type\");\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type is application/json\", function () {\r",
													"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/problem+json; charset=utf-8');\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; v=1.0"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": 100,\n  \"title\": \"string\",\n  \"description\": \"string\",\n  \"pageCount\": {{отриц}},\n  \"excerpt\": \"string\",\n  \"publishDate\": \"2023-05-20T09:47:29.148Z\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/api/v1/Books",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"Books"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; v=1.0"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"description\": \"<string>\",\n  \"pageCount\": \"<integer>\",\n  \"excerpt\": \"<string>\",\n  \"publishDate\": \"<dateTime>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/Books",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"Books"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Authors",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Authors/:id позитив",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 5000ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is present\", function () {\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is application/json\", function () {\r",
															"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/json; charset=utf-8; v=1.0');\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain; v=1.0"
													}
												],
												"url": {
													"raw": "{{baseURL}}/api/v1/Authors/{{id}}",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"Authors",
														"{{id}}"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "text/plain; v=1.0"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/Authors/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"Authors",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain; v=1.0"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<integer>\",\n  \"idBook\": \"<integer>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Authors/:id отриц",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 5000ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is present\", function () {\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is application/json\", function () {\r",
															"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/problem+json; charset=utf-8');\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain; v=1.0"
													}
												],
												"url": {
													"raw": "{{baseURL}}/api/v1/Authors/{{отриц}}",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"Authors",
														"{{отриц}}"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "text/plain; v=1.0"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/Authors/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"Authors",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain; v=1.0"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<integer>\",\n  \"idBook\": \"<integer>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Authors/:id недопустимое",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 5000ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is present\", function () {\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is application/json\", function () {\r",
															"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/problem+json; charset=utf-8');\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain; v=1.0"
													}
												],
												"url": {
													"raw": "{{baseURL}}/api/v1/Authors/{{недоп_знач}}",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"Authors",
														"{{недоп_знач}}"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "text/plain; v=1.0"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/Authors/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"Authors",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain; v=1.0"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<integer>\",\n  \"idBook\": \"<integer>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Authors/:id несуществующ",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 404\", function () {\r",
															"    pm.response.to.have.status(404);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 5000ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is present\", function () {\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is application/json\", function () {\r",
															"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/problem+json; charset=utf-8; v=1.0');\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain; v=1.0"
													}
												],
												"url": {
													"raw": "{{baseURL}}/api/v1/Authors/900",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"Authors",
														"900"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "text/plain; v=1.0"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/Authors/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"Authors",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain; v=1.0"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<integer>\",\n  \"idBook\": \"<integer>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Authors/:id позитив",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 5000ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is present\", function () {\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is application/json\", function () {\r",
															"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/json; charset=utf-8; v=1.0');\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; v=1.0"
													},
													{
														"key": "Accept",
														"value": "text/plain; v=1.0"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n \"id\": 925,\n \"idBook\": 1,\n \"firstName\": \"test\",\n \"lastName\": \"teststring\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/api/v1/Authors/{{id}}",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"Authors",
														"{{id}}"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json; v=1.0"
															},
															{
																"key": "Accept",
																"value": "text/plain; v=1.0"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<integer>\",\n  \"idBook\": \"<integer>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/Authors/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"Authors",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain; v=1.0"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<integer>\",\n  \"idBook\": \"<integer>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Authors/:id проверка PUT",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 5000ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is present\", function () {\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is application/json\", function () {\r",
															"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/json; charset=utf-8; v=1.0');\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain; v=1.0"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseURL}}/api/v1/Authors/925",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"Authors",
														"925"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "text/plain; v=1.0"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/Authors/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"Authors",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain; v=1.0"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<integer>\",\n  \"idBook\": \"<integer>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Authors/:id отриц",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 5000ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is present\", function () {\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is application/json\", function () {\r",
															"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/problem+json; charset=utf-8');\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; v=1.0"
													},
													{
														"key": "Accept",
														"value": "text/plain; v=1.0"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n \"id\": 925,\n \"idBook\": 1,\n \"firstName\": \"test\",\n \"lastName\": \"teststring\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/api/v1/Authors/{{отриц}}",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"Authors",
														"{{отриц}}"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json; v=1.0"
															},
															{
																"key": "Accept",
																"value": "text/plain; v=1.0"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<integer>\",\n  \"idBook\": \"<integer>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/Authors/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"Authors",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain; v=1.0"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<integer>\",\n  \"idBook\": \"<integer>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Authors/:id недопуст",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 5000ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is present\", function () {\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is application/json\", function () {\r",
															"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/problem+json; charset=utf-8');\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; v=1.0"
													},
													{
														"key": "Accept",
														"value": "text/plain; v=1.0"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n \"id\": 925,\n \"idBook\": 1,\n \"firstName\": \"test\",\n \"lastName\": \"teststring\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/api/v1/Authors/{{недоп_знач}}",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"Authors",
														"{{недоп_знач}}"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json; v=1.0"
															},
															{
																"key": "Accept",
																"value": "text/plain; v=1.0"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<integer>\",\n  \"idBook\": \"<integer>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/Authors/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"Authors",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain; v=1.0"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<integer>\",\n  \"idBook\": \"<integer>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Authors/:id тело буквы",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 5000ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is present\", function () {\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is application/json\", function () {\r",
															"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/problem+json; charset=utf-8');\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; v=1.0"
													},
													{
														"key": "Accept",
														"value": "text/plain; v=1.0"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n \"id\": {{букаы}},\n \"idBook\": 1,\n \"firstName\": \"test\",\n \"lastName\": \"teststring\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/api/v1/Authors/{{id}}",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"Authors",
														"{{id}}"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json; v=1.0"
															},
															{
																"key": "Accept",
																"value": "text/plain; v=1.0"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<integer>\",\n  \"idBook\": \"<integer>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/Authors/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"Authors",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain; v=1.0"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<integer>\",\n  \"idBook\": \"<integer>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Authors/:id тело idBook отриц",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 5000ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is present\", function () {\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is application/json\", function () {\r",
															"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/problem+json; charset=utf-8');\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; v=1.0"
													},
													{
														"key": "Accept",
														"value": "text/plain; v=1.0"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n \"id\": 925,\n \"idBook\": {{отриц}},\n \"firstName\": \"test\",\n \"lastName\": \"teststring\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/api/v1/Authors/{{id}}",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"Authors",
														"{{id}}"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json; v=1.0"
															},
															{
																"key": "Accept",
																"value": "text/plain; v=1.0"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<integer>\",\n  \"idBook\": \"<integer>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/Authors/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"Authors",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain; v=1.0"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<integer>\",\n  \"idBook\": \"<integer>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Authors/:id тело обязательность заполн",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 5000ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is present\", function () {\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is application/json\", function () {\r",
															"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/problem+json; charset=utf-8');\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; v=1.0"
													},
													{
														"key": "Accept",
														"value": "text/plain; v=1.0"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n \"id\": null,\n \"idBook\": null,\n \"firstName\": \"test\",\n \"lastName\": \"teststring\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/api/v1/Authors/{{id}}",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"Authors",
														"{{id}}"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json; v=1.0"
															},
															{
																"key": "Accept",
																"value": "text/plain; v=1.0"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<integer>\",\n  \"idBook\": \"<integer>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/Authors/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"Authors",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain; v=1.0"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<integer>\",\n  \"idBook\": \"<integer>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Authors/:id позитив",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 5000ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/api/v1/Authors/{{id}}",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"Authors",
														"{{id}}"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/v1/Authors/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"Authors",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Authors/:id проверка GET",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 204\", function () {\r",
															"    pm.response.to.have.status(404);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseURL}}/api/v1/Authors/{{id}}",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"Authors",
														"{{id}}"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/v1/Authors/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"Authors",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Authors/:id отриц",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseURL}}/api/v1/Authors/{{отриц}}",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"Authors",
														"{{отриц}}"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/v1/Authors/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"Authors",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "authors",
									"item": [
										{
											"name": "books",
											"item": [
												{
													"name": "{idBook}",
													"item": [
														{
															"name": "Authors:idBook позитив",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Status code is 200\", function () {\r",
																			"    pm.response.to.have.status(200);\r",
																			"});\r",
																			"\r",
																			"pm.test(\"Response time is less than 5000ms\", function () {\r",
																			"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
																			"});\r",
																			"\r",
																			"pm.test(\"Content-Type is present\", function () {\r",
																			"    pm.response.to.have.header(\"Content-Type\");\r",
																			"});\r",
																			"\r",
																			"pm.test(\"Content-Type is application/json\", function () {\r",
																			"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/json; charset=utf-8; v=1.0');\r",
																			"});\r",
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "text/plain; v=1.0"
																	}
																],
																"url": {
																	"raw": "{{baseURL}}/api/v1/Authors/authors/books/{{id}}",
																	"host": [
																		"{{baseURL}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"Authors",
																		"authors",
																		"books",
																		"{{id}}"
																	]
																}
															},
															"response": [
																{
																	"name": "Success",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "text/plain; v=1.0"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v1/Authors/authors/books/:idBook",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v1",
																				"Authors",
																				"authors",
																				"books",
																				":idBook"
																			],
																			"variable": [
																				{
																					"key": "idBook"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain; v=1.0"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"idBook\": \"<integer>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\"\n  },\n  {\n    \"id\": \"<integer>\",\n    \"idBook\": \"<integer>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\"\n  }\n]"
																}
															]
														},
														{
															"name": "Authors:idBook недоп.",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.test(\"Status code is 400\", function () {\r",
																			"    pm.response.to.have.status(400);\r",
																			"});\r",
																			"\r",
																			"pm.test(\"Response time is less than 5000ms\", function () {\r",
																			"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
																			"});\r",
																			"\r",
																			"pm.test(\"Content-Type is present\", function () {\r",
																			"    pm.response.to.have.header(\"Content-Type\");\r",
																			"});\r",
																			"\r",
																			"pm.test(\"Content-Type is application/json\", function () {\r",
																			"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/problem+json; charset=utf-8');\r",
																			"});\r",
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "text/plain; v=1.0"
																	}
																],
																"url": {
																	"raw": "{{baseURL}}/api/v1/Authors/authors/books/{{недоп_знач}}",
																	"host": [
																		"{{baseURL}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"Authors",
																		"authors",
																		"books",
																		"{{недоп_знач}}"
																	]
																}
															},
															"response": [
																{
																	"name": "Success",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "text/plain; v=1.0"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v1/Authors/authors/books/:idBook",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v1",
																				"Authors",
																				"authors",
																				"books",
																				":idBook"
																			],
																			"variable": [
																				{
																					"key": "idBook"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain; v=1.0"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"idBook\": \"<integer>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\"\n  },\n  {\n    \"id\": \"<integer>\",\n    \"idBook\": \"<integer>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\"\n  }\n]"
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "Authors весь список",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 5000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type is present\", function () {\r",
													"    pm.response.to.have.header(\"Content-Type\");\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type is application/json\", function () {\r",
													"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/json; charset=utf-8; v=1.0');\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain; v=1.0"
											}
										],
										"url": {
											"raw": "{{baseURL}}/api/v1/Authors",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"Authors"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain; v=1.0"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/Authors",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"Authors"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain; v=1.0"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"idBook\": \"<integer>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\"\n  },\n  {\n    \"id\": \"<integer>\",\n    \"idBook\": \"<integer>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\"\n  }\n]"
										}
									]
								},
								{
									"name": "Authors позитив",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 5000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type is present\", function () {\r",
													"    pm.response.to.have.header(\"Content-Type\");\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type is application/json\", function () {\r",
													"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/json; charset=utf-8; v=1.0');\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; v=1.0"
											},
											{
												"key": "Accept",
												"value": "text/plain; v=1.0"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n \"id\": 1005,\n \"idBook\": 12,\n \"firstName\": \"string\",\n \"lastName\": \"string\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/api/v1/Authors",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"Authors"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; v=1.0"
													},
													{
														"key": "Accept",
														"value": "text/plain; v=1.0"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<integer>\",\n  \"idBook\": \"<integer>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/Authors",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"Authors"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain; v=1.0"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<integer>\",\n  \"idBook\": \"<integer>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Authors Проверка POST",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/api/v1/Authors/1005",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"Authors",
												"1005"
											]
										}
									},
									"response": []
								},
								{
									"name": "Authors тело отриц",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 5000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type is present\", function () {\r",
													"    pm.response.to.have.header(\"Content-Type\");\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type is application/json\", function () {\r",
													"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/problem+json; charset=utf-8');\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"id\": {{отриц}},\r\n \"idBook\": 12,\r\n \"firstName\": \"string\",\r\n \"lastName\": \"string\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/api/v1/Authors/",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"Authors",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Authors тело inBook спецсив",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 5000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type is present\", function () {\r",
													"    pm.response.to.have.header(\"Content-Type\");\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type is application/json\", function () {\r",
													"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/problem+json; charset=utf-8');\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"id\": 90,\r\n \"idBook\": {{спецсимв}},\r\n \"firstName\": \"string\",\r\n \"lastName\": \"string\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/api/v1/Authors/",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"Authors",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Authors тело обязательность заполнения",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 5000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type is present\", function () {\r",
													"    pm.response.to.have.header(\"Content-Type\");\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type is application/json\", function () {\r",
													"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/problem+json; charset=utf-8');\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"id\": null,\r\n \"idBook\": null,\r\n \"firstName\": \"string\",\r\n \"lastName\": \"string\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/api/v1/Authors/",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"Authors",
												""
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Activities",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Activities/:id  позитивное значение",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 5000ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is present\", function () {\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is application/json\", function () {\r",
															"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/json; charset=utf-8; v=1.0');\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain; v=1.0"
													}
												],
												"url": {
													"raw": "{{baseURL}}/api/v1/Activities/{{id}}",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"Activities",
														"{{id}}"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "text/plain; v=1.0"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/Activities/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"Activities",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain; v=1.0"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"dueDate\": \"<dateTime>\",\n  \"completed\": \"<boolean>\"\n}"
												}
											]
										},
										{
											"name": "Activities/:id  отрицательное значение",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 5000ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is present\", function () {\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is application/json\", function () {\r",
															"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/problem+json; charset=utf-8');\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain; v=1.0"
													}
												],
												"url": {
													"raw": "{{baseURL}}/api/v1/Activities/{{отриц}}",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"Activities",
														"{{отриц}}"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "text/plain; v=1.0"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/Activities/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"Activities",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain; v=1.0"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"dueDate\": \"<dateTime>\",\n  \"completed\": \"<boolean>\"\n}"
												}
											]
										},
										{
											"name": "Activities/:id  недопустимое значение",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 5000ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is present\", function () {\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is application/json\", function () {\r",
															"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/problem+json; charset=utf-8');\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain; v=1.0"
													}
												],
												"url": {
													"raw": "{{baseURL}}/api/v1/Activities/{{недоп_знач}}",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"Activities",
														"{{недоп_знач}}"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "text/plain; v=1.0"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/Activities/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"Activities",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain; v=1.0"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"dueDate\": \"<dateTime>\",\n  \"completed\": \"<boolean>\"\n}"
												}
											]
										},
										{
											"name": "Activities/:id  несуществующее значение",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 404\", function () {\r",
															"    pm.response.to.have.status(404);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 5000ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is present\", function () {\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is application/json\", function () {\r",
															"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/problem+json; charset=utf-8; v=1.0');\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain; v=1.0"
													}
												],
												"url": {
													"raw": "{{baseURL}}/api/v1/Activities/1000",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"Activities",
														"1000"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "text/plain; v=1.0"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/Activities/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"Activities",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain; v=1.0"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"dueDate\": \"<dateTime>\",\n  \"completed\": \"<boolean>\"\n}"
												}
											]
										},
										{
											"name": "Activities/:id позитивное значение",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 5000ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is present\", function () {\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is application/json\", function () {\r",
															"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/json; charset=utf-8; v=1.0');\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; v=1.0"
													},
													{
														"key": "Accept",
														"value": "text/plain; v=1.0"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": 1007,\n  \"title\": \"string\",\n  \"dueDate\": \"2023-05-17T23:06:14.7559804+00:00\",\n  \"completed\": true\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/api/v1/Activities/{{id}}",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"Activities",
														"{{id}}"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json; v=1.0"
															},
															{
																"key": "Accept",
																"value": "text/plain; v=1.0"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"dueDate\": \"<dateTime>\",\n  \"completed\": \"<boolean>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/Activities/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"Activities",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain; v=1.0"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"dueDate\": \"<dateTime>\",\n  \"completed\": \"<boolean>\"\n}"
												}
											]
										},
										{
											"name": "Activities/:id  проверка PUT",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 5000ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is present\", function () {\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is application/json\", function () {\r",
															"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/json; charset=utf-8; v=1.0');\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain; v=1.0"
													}
												],
												"url": {
													"raw": "{{baseURL}}/api/v1/Activities/1007",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"Activities",
														"1007"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "text/plain; v=1.0"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/Activities/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"Activities",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain; v=1.0"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"dueDate\": \"<dateTime>\",\n  \"completed\": \"<boolean>\"\n}"
												}
											]
										},
										{
											"name": "Activities/:id отрицательное значение",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 5000ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is present\", function () {\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is application/json\", function () {\r",
															"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/problem+json; charset=utf-8');\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; v=1.0"
													},
													{
														"key": "Accept",
														"value": "text/plain; v=1.0"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": 10,\n  \"title\": \"string\",\n  \"dueDate\": \"2023-05-17T23:06:14.7559804+00:00\",\n  \"completed\": true\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/api/v1/Activities/{{отриц}}",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"Activities",
														"{{отриц}}"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json; v=1.0"
															},
															{
																"key": "Accept",
																"value": "text/plain; v=1.0"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"dueDate\": \"<dateTime>\",\n  \"completed\": \"<boolean>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/Activities/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"Activities",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain; v=1.0"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"dueDate\": \"<dateTime>\",\n  \"completed\": \"<boolean>\"\n}"
												}
											]
										},
										{
											"name": "Activities/:id недопустимое значение",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 5000ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is present\", function () {\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is application/json\", function () {\r",
															"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/problem+json; charset=utf-8');\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; v=1.0"
													},
													{
														"key": "Accept",
														"value": "text/plain; v=1.0"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": 10,\n  \"title\": \"string\",\n  \"dueDate\": \"2023-05-17T23:06:14.7559804+00:00\",\n  \"completed\": true\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/api/v1/Activities/{{недоп_знач}}",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"Activities",
														"{{недоп_знач}}"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json; v=1.0"
															},
															{
																"key": "Accept",
																"value": "text/plain; v=1.0"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"dueDate\": \"<dateTime>\",\n  \"completed\": \"<boolean>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/Activities/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"Activities",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain; v=1.0"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"dueDate\": \"<dateTime>\",\n  \"completed\": \"<boolean>\"\n}"
												}
											]
										},
										{
											"name": "Activities/:id в теле значение буквы",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 5000ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is present\", function () {\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is application/json\", function () {\r",
															"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/problem+json; charset=utf-8');\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; v=1.0"
													},
													{
														"key": "Accept",
														"value": "text/plain; v=1.0"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": {{букаы}},\n  \"title\": \"string\",\n  \"dueDate\": \"2023-05-17T23:06:14.7559804+00:00\",\n  \"completed\": true\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/api/v1/Activities/{{id}}",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"Activities",
														"{{id}}"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json; v=1.0"
															},
															{
																"key": "Accept",
																"value": "text/plain; v=1.0"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"dueDate\": \"<dateTime>\",\n  \"completed\": \"<boolean>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/Activities/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"Activities",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain; v=1.0"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"dueDate\": \"<dateTime>\",\n  \"completed\": \"<boolean>\"\n}"
												}
											]
										},
										{
											"name": "Activities/:id тело не существующая дата \"publishDate\"",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 5000ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is present\", function () {\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is application/json\", function () {\r",
															"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/problem+json; charset=utf-8');\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; v=1.0"
													},
													{
														"key": "Accept",
														"value": "text/plain; v=1.0"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": 10,\n  \"title\": \"string\",\n  \"dueDate\": \"2023-05-98T09:47:29.148Z\",\n  \"completed\": true\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/api/v1/Activities/{{id}}",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"Activities",
														"{{id}}"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json; v=1.0"
															},
															{
																"key": "Accept",
																"value": "text/plain; v=1.0"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"dueDate\": \"<dateTime>\",\n  \"completed\": \"<boolean>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/Activities/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"Activities",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain; v=1.0"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"dueDate\": \"<dateTime>\",\n  \"completed\": \"<boolean>\"\n}"
												}
											]
										},
										{
											"name": "Activities/:id тело обязательность заполн",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 5000ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is present\", function () {\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"});\r",
															"\r",
															"pm.test(\"Content-Type is application/json\", function () {\r",
															"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/problem+json; charset=utf-8');\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; v=1.0"
													},
													{
														"key": "Accept",
														"value": "text/plain; v=1.0"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": null,\n  \"title\": \"string\",\n  \"dueDate\": \"2023-05-17T23:06:14.7559804+00:00\",\n  \"completed\": null\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/api/v1/Activities/{{id}}",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"Activities",
														"{{id}}"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json; v=1.0"
															},
															{
																"key": "Accept",
																"value": "text/plain; v=1.0"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"dueDate\": \"<dateTime>\",\n  \"completed\": \"<boolean>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/Activities/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"Activities",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain; v=1.0"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"dueDate\": \"<dateTime>\",\n  \"completed\": \"<boolean>\"\n}"
												}
											]
										},
										{
											"name": "Activities/:id позитивное значение",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is less than 5000ms\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/api/v1/Activities/{{id}}",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"Activities",
														"{{id}}"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/v1/Activities/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"Activities",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Activities/:id  проверка DEL",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 204\", function () {\r",
															"    pm.response.to.have.status(404);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain; v=1.0"
													}
												],
												"url": {
													"raw": "{{baseURL}}/api/v1/Activities/{{id}}",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"Activities",
														"{{id}}"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "text/plain; v=1.0"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/Activities/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"Activities",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain; v=1.0"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"dueDate\": \"<dateTime>\",\n  \"completed\": \"<boolean>\"\n}"
												}
											]
										},
										{
											"name": "Activities/:id отрицательное значение",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/api/v1/Activities/{{отриц}}",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"api",
														"v1",
														"Activities",
														"{{отриц}}"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/v1/Activities/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"Activities",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Activities весь список",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 5000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type is present\", function () {\r",
													"    pm.response.to.have.header(\"Content-Type\");\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type is application/json\", function () {\r",
													"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/json; charset=utf-8; v=1.0');\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain; v=1.0"
											}
										],
										"url": {
											"raw": "{{baseURL}}/api/v1/Activities",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"Activities"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain; v=1.0"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/Activities",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"Activities"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain; v=1.0"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"title\": \"<string>\",\n    \"dueDate\": \"<dateTime>\",\n    \"completed\": \"<boolean>\"\n  },\n  {\n    \"id\": \"<integer>\",\n    \"title\": \"<string>\",\n    \"dueDate\": \"<dateTime>\",\n    \"completed\": \"<boolean>\"\n  }\n]"
										}
									]
								},
								{
									"name": "Activities позитивные значения",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 5000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type is present\", function () {\r",
													"    pm.response.to.have.header(\"Content-Type\");\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type is application/json\", function () {\r",
													"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/json; charset=utf-8; v=1.0');\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; v=1.0"
											},
											{
												"key": "Accept",
												"value": "text/plain; v=1.0"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": 1007,\n  \"title\": \"string\",\n  \"dueDate\": \"2023-05-19T20:54:02.318Z\",\n  \"completed\": true\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/api/v1/Activities",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"Activities"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; v=1.0"
													},
													{
														"key": "Accept",
														"value": "text/plain; v=1.0"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"dueDate\": \"<dateTime>\",\n  \"completed\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/Activities",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"Activities"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain; v=1.0"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"dueDate\": \"<dateTime>\",\n  \"completed\": \"<boolean>\"\n}"
										}
									]
								},
								{
									"name": "Activities проверка POST",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain; v=1.0"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/api/v1/Activities/1007",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"Activities",
												"1007"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain; v=1.0"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/Activities",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"Activities"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain; v=1.0"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"title\": \"<string>\",\n    \"dueDate\": \"<dateTime>\",\n    \"completed\": \"<boolean>\"\n  },\n  {\n    \"id\": \"<integer>\",\n    \"title\": \"<string>\",\n    \"dueDate\": \"<dateTime>\",\n    \"completed\": \"<boolean>\"\n  }\n]"
										}
									]
								},
								{
									"name": "Activities в теле отрицательное значение",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 5000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type is present\", function () {\r",
													"    pm.response.to.have.header(\"Content-Type\");\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type is application/json\", function () {\r",
													"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/json; charset=utf-8; v=1.0');\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; v=1.0"
											},
											{
												"key": "Accept",
												"value": "text/plain; v=1.0"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": {{отриц}},\n  \"title\": \"string\",\n  \"dueDate\": \"2023-05-19T20:54:02.318Z\",\n  \"completed\": true\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/api/v1/Activities",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"Activities"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; v=1.0"
													},
													{
														"key": "Accept",
														"value": "text/plain; v=1.0"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"dueDate\": \"<dateTime>\",\n  \"completed\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/Activities",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"Activities"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain; v=1.0"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"dueDate\": \"<dateTime>\",\n  \"completed\": \"<boolean>\"\n}"
										}
									]
								},
								{
									"name": "Activities тело обязательность заполнения",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 5000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type is present\", function () {\r",
													"    pm.response.to.have.header(\"Content-Type\");\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type is application/json\", function () {\r",
													"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/problem+json; charset=utf-8');\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; v=1.0"
											},
											{
												"key": "Accept",
												"value": "text/plain; v=1.0"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": null,\n  \"title\": \"string\",\n  \"dueDate\": null,\n  \"completed\": true\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/api/v1/Activities",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"Activities"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; v=1.0"
													},
													{
														"key": "Accept",
														"value": "text/plain; v=1.0"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"dueDate\": \"<dateTime>\",\n  \"completed\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/Activities",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"Activities"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain; v=1.0"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"dueDate\": \"<dateTime>\",\n  \"completed\": \"<boolean>\"\n}"
										}
									]
								},
								{
									"name": "Activities  тело не корректный формат \"publishDate\"",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 5000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type is present\", function () {\r",
													"    pm.response.to.have.header(\"Content-Type\");\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type is application/json\", function () {\r",
													"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/problem+json; charset=utf-8');\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; v=1.0"
											},
											{
												"key": "Accept",
												"value": "text/plain; v=1.0"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": 10,\n  \"title\": \"string\",\n  \"dueDate\": \"2023/05/20T07/40/36/917Z\",\n  \"completed\": true\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/api/v1/Activities",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"Activities"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; v=1.0"
													},
													{
														"key": "Accept",
														"value": "text/plain; v=1.0"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"dueDate\": \"<dateTime>\",\n  \"completed\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/Activities",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"Activities"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain; v=1.0"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"dueDate\": \"<dateTime>\",\n  \"completed\": \"<boolean>\"\n}"
										}
									]
								},
								{
									"name": "Activities тело обязательность заполнения \"completed\"",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response time is less than 5000ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type is present\", function () {\r",
													"    pm.response.to.have.header(\"Content-Type\");\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type is application/json\", function () {\r",
													"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/problem+json; charset=utf-8');\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; v=1.0"
											},
											{
												"key": "Accept",
												"value": "text/plain; v=1.0"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": 10,\n  \"title\": \"string\",\n  \"dueDate\": \"2023-05-19T20:54:02.318Z\",\n  \"completed\": null\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/api/v1/Activities",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"api",
												"v1",
												"Activities"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; v=1.0"
													},
													{
														"key": "Accept",
														"value": "text/plain; v=1.0"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"dueDate\": \"<dateTime>\",\n  \"completed\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/Activities",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"Activities"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain; v=1.0"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"dueDate\": \"<dateTime>\",\n  \"completed\": \"<boolean>\"\n}"
										}
									]
								}
							]
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"if (pm.response.code == 200) {",
					"    const res = pm.response.json(); ",
					"    const id = res.id; ",
					"    if (id) {",
					"        pm.environment.set('idVar', id); ",
					"    }",
					"        ",
					"}",
					"",
					"",
					"",
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://fakerestapi.azurewebsites.net/"
		},
		{
			"key": "id",
			"value": "8",
			"type": "string"
		},
		{
			"key": "отриц",
			"value": "-1",
			"type": "string"
		},
		{
			"key": "спецсимв",
			"value": "$#",
			"type": "string"
		},
		{
			"key": "букаы",
			"value": "dom",
			"type": "string"
		},
		{
			"key": "недоп_знач",
			"value": "2147483648",
			"type": "string"
		}
	]
}